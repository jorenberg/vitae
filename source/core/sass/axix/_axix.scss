//
// AXIX®
// Advance eXpert Intelligent eXtreme
// Version    : v1.0.0
// Build      : Everest
// Mode       : -//-Production-//-
// -------------------------------------------------------------------
// @require   : Sass + Compass
// @require   : Ruby + Node.js® + Grunt
// -------------------------------------------------------------------
// Designed and Build with ♥ for prabhatkumar.org/.
// -------------------------------------------------------------------
// @architecture    : Prabhat Kumar, http://prabhatkumar.org/
// @author          : Prabhat Kumar, https://github.com/iamprabhat
// -------------------------------------------------------------------
// Copyright © 2014 - 2016 Prabhat Kumar, All Rights Reserved.
// Licensed under Apache. ============================================
// -------------------------------------------------------------------

// Importing partials/modules through "@import" directive.
// 1.
@import "base/config";
// 2.
@import "base/version";
// 3.
@import "compass/css3";

// --------------------------------
// Sass - (3.4.21): Selective Steve
// Compass - (v1.0.3): Polaris
// --------------------------------

// ---------------------------------- //
//        Using @mixin directive      //
//       @author : Prabhat Kumar      //
//        @date  : 09-Mar-2016        //
// ---------------------------------- //

// ==========================================
// A. The @mixin directive for normalize.css
// ==========================================
// @version : [v3.0.3]
// @author  : Prabhat Kumar
// @homeurl : http://prabhatkumar.org/
/// Loads   : custom - normalize.css
/// @access private
/// redefined normalize.css
@mixin -axix-normalize {
  /*! Iamprabhat® [v0.0.1] */
  /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
  
  //
  // 1. Set default font family to sans-serif.
  // 2. Prevent iOS and IE text size adjust after device orientation change,
  //    without disabling user zoom.
  //
  html {
    font-family: sans-serif; // 1
    -ms-text-size-adjust: 100%; // 2
    -webkit-text-size-adjust: 100%; // 2
  }
  
  //
  // Remove default margin.
  //
  body {
    margin: 0;
  }
  
  // HTML5 display definitions
  // ==========================================================================
  //
  // Correct `block` display not defined for any HTML5 element in IE 8/9.
  //
  article,
  figure,
  figcaption,
  footer,
  header,
  hgroup,
  section {
    display: block;
  }
  
  // Links
  // ==========================================================================
  //
  // Remove the gray background color from active links in IE 10.
  //
  a {
    background-color: transparent;
  }
  
  //
  // Improve readability of focused elements when they are also in an
  // active/hover state.
  //
  a:active,
  a:hover {
    outline: 0;
  }
  
  // Text-level semantics
  // ==========================================================================
  //
  // Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
  //
  b,
  strong {
    font-weight: bold;
  }
  
  //
  // Address variable `h1` font-size and margin within `section` and `article`
  // contexts in Firefox 4+, Safari, and Chrome.
  //
  h1 {
    font-size: 2em;
    margin: 0.67em 0;
  }
  
  //
  // Address inconsistent and variable font size in all browsers.
  //
  small {
    font-size: 80%;
  }
  
  //
  // Prevent `sub` and `sup` affecting `line-height` in all browsers.
  //
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  
  sub {
    bottom: -0.25em;
  }
  
  sup {
    top: -0.5em;
  }
  
  // Embedded content
  // ==========================================================================
  //
  // Correct overflow not hidden in IE 9/10/11.
  //
  svg:not(:root) {
    overflow: hidden;
  }
  
  // Grouping content
  // ==========================================================================
  //
  // Address margin not present in IE 8/9 and Safari.
  //
  figure {
    margin: 1em 40px;
  }
  
  //
  // Address differences between Firefox and other browsers.
  //
  hr {
    box-sizing: content-box;
    height: 0;
  }
}

// ==========================================
// B. The @include directive for font-face
// ==========================================
@include font-face("Palatino Linotype", font-files("fonts/palatino/PalatinoLinotype.ttf"));
@include font-face("Open Sans", font-files("fonts/opensans/OpenSans-Regular.ttf", "fonts/opensans/OpenSans-Semibold.ttf"));

// ==========================================
// C. The @mixin directive for Clearfix
// ==========================================
// For modern browsers:
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// ==========================================
// D. The @mixin directive for Box sizing
// ==========================================
// The box-sizing property is used to alter the default CSS box model used to calculate widths and heights of elements.
// Values: content-box || border-box || inherit || initial || unset
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// ==========================================
// E. The @mixin directive for User select
// ==========================================
// For selection options for text on the page
// Controls the actual Selection operation.
// Note: This doesn't have any effect on content loaded as chrome, except in textboxes.
// Values: none || text || all and -moz-none or element for Firefox 21 and -ms-, respectively.
@mixin user-select($select) {
  -webkit-user-select: $select;
     -moz-user-select: $select;
      -ms-user-select: $select; // IE10+
          user-select: $select;
}

// ==========================================
// F. The @mixin directive for ::selection
// ==========================================
// The ::selection CSS pseudo-element applies rules to the portion of a document,
// that has been highlighted (e.g. selected with the mouse or another pointing device) by the user.
/// Note: Only a small subset of CSS properties can be used in a rule using ::selection in it's
/// selector: color, background-color, cursor, outline, text-decoration, text-emphasis-color and text-shadow.
@mixin axix-selection ($background, $color) {
  background: $background;
  color: $color;
}

// ==========================================
// G. The @mixin directive for Size (W & H)
// ==========================================
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// ==========================================
// H. CSS3 calc mixin.
// ==========================================
@mixin axix-calc($property, $value) {
  #{$property}: -webkit-calc(#{$value});
  #{$property}: -moz-calc(#{$value});
  #{$property}: calc(#{$value});
}

// ==========================================
// I. Visually hide an element.
// ==========================================
%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

// ==========================================
// J. The @mixin directive for IE-7.
// ==========================================
// @Using: @content directive.
@mixin apply-to-ie7 {
  // IE7 hack from:-
  // http://www.paulirish.com/2009/browser-specific-css-hacks/
  *:first-child+html & {
    @content;
  }
}

// ==========================================
// K. Mixin helper to output vendor prefixes.
// ==========================================
// @param {String} $property - Unprefixed CSS property
// @param {*} $value - Raw CSS value
// @param {List} $prefixes - List of prefixes to output
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
  }
  #{$property}: $value;
}

// ==========================================
// L. The @function directive to strip unit.
// ==========================================
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// =============================================================
// M. The @function directive for px to em string interpolation.
// =============================================================
// @using Sass unitless() method.
$browser-context: 16;

@function em($pixels, $context: $browser-context) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  
  @return $pixels / $context * 1em;
}

// ============================================
// N. The @mixin directive for Text Shadow.
// ============================================
// The text-shadow property adds shadows to text.
// It accepts a comma-separated list of shadows to be applied to the text and text-decorations of the element.
// Usage:
// 1. Each shadow is specified as an offset from the text, along with optional color and blur radius values.
// 2. Multiple shadows are applied front-to-back, with the first-specified shadow on top.
// 3. This property applies to both ::first-line and ::first-letter pseudo-elements.
// Syntax:
// offset-x | offset-y | blur-radius | color
/// @param {Size} $x [2px] - X
/// @param {Size} $y [2px] - Y
/// @param {Size} $blur [2px] - Blur
/// @param {Color} $color [rgba(0,0,0,.4)] - Color
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, .4)) {
  text-shadow: $x $y $blur $color;
}

// ============================================
// O. A smart cache @mixin directive.
//    @author : Prabhat Kumar
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Global cache map.
$cache: ();

// Cache mixin.
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@mixin cache($declarations) {
  // Looping through all properties/values from map.
  @each $property, $value in $declarations {
    // Get the stored values for the current property.
    $stored-values: map-get($cache, $property);
    // If the value doesn't exist in stored values.
    @if not index($stored-values, $value) {
      // Add it.
      $cache: map-merge($cache, ($property: append($stored-values or (), $value))) !global;
      // And create a placeholder at root level.
      @at-root %#{$property}-#{length(map-get($cache, $property))} {
        #{$property}: $value;
      }
    }
    // Extend the placeholder.
    @extend %#{$property}-#{index(map-get($cache, $property), $value)};
  }
}

// ============================================
// P. The @mixin directive for Hyphens.
// ============================================
// The hyphens CSS property tells the browser how to hyphenate words when line-wrapping.
// Hypenation rules are language-specific. xml:lang attribute must be used.
// Values: none || manual || auto || inherit || initial || unset
@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: $mode;
     -moz-hyphens: $mode;
      -ms-hyphens: $mode; // IE10+
       -o-hyphens: $mode;
          hyphens: $mode;
}

// ==========================================
// Q. The @mixin directive for Transitions.
// ==========================================
// The transition CSS property can enables to define the transition between two states of an element.
// Different states may be defined using pseudo-classes like :hover or :active or dynamically set using JavaScript.
// Q-1. transition - a shorthand property for below - "all".
// Q-2. transition-property
// Q-3. transition-delay
// Q-4. transition-duration
// Q-5. transition-timing-function

// Q-1.
@mixin transition($transition...) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}
// Q-2.
@mixin transition-property($transition-property...) {
  -webkit-transition-property: $transition-property;
     -moz-transition-property: $transition-property;
      -ms-transition-property: $transition-property;
       -o-transition-property: $transition-property;
          transition-property: $transition-property;
}
// Q-3.
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
     -moz-transition-delay: $transition-delay;
      -ms-transition-delay: $transition-delay;
       -o-transition-delay: $transition-delay;
          transition-delay: $transition-delay;
}
// Q-4.
@mixin transition-duration($transition-duration...) {
  -webkit-transition-duration: $transition-duration;
     -moz-transition-duration: $transition-duration;
      -ms-transition-duration: $transition-duration;
       -o-transition-duration: $transition-duration;
          transition-duration: $transition-duration;
}
// Q-5.
@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
     -moz-transition-timing-function: $timing-function;
      -ms-transition-timing-function: $timing-function;
       -o-transition-timing-function: $timing-function;
          transition-timing-function: $timing-function;
}

// ==========================================
// R. The @mixin directive for Animations.
// ==========================================
// The animation CSS property makes possible to animate transitions from one CSS style configuration to another.
// Properties Value:-
// R-1. animation - a shorthand property for below - "all".
// R-2. animation-name
// R-3. animation-duration
// R-4. animation-timing-function
// R-5. animation-delay
// R-6. animation-iteration-count
// R-7. animation-direction
// R-8. animation-fill-mode
// R-9. animation-play-state

// R-1.
@mixin animation($animation) {
  -webkit-animation: $animation;
     -moz-animation: $animation;
      -ms-animation: $animation;
       -o-animation: $animation;
          animation: $animation;
}
// R-2.
@mixin animation-name($name) {
  -webkit-animation-name: $name;
     -moz-animation-name: $name;
      -ms-animation-name: $name;
       -o-animation-name: $name;
          animation-name: $name;
}
// R-3.
@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
     -moz-animation-duration: $duration;
      -ms-animation-duration: $duration;
       -o-animation-duration: $duration;
          animation-duration: $duration;
}
// R-4.
@mixin animation-timing-function($timing-function) {
  -webkit-animation-timing-function: $timing-function;
     -moz-animation-timing-function: $timing-function;
      -ms-animation-timing-function: $timing-function;
       -o-animation-timing-function: $timing-function;
          animation-timing-function: $timing-function;
}
// R-5.
@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
     -moz-animation-delay: $delay;
      -ms-animation-delay: $delay;
       -o-animation-delay: $delay;
          animation-delay: $delay;
}
// R-6.
@mixin animation-iteration-count($iteration-count) {
  -webkit-animation-iteration-count: $iteration-count;
     -moz-animation-iteration-count: $iteration-count;
      -ms-animation-iteration-count: $iteration-count;
       -o-animation-iteration-count: $iteration-count;
          animation-iteration-count: $iteration-count;
}
// R-7.
@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
     -moz-animation-direction: $direction;
      -ms-animation-direction: $direction;
       -o-animation-direction: $direction;
          animation-direction: $direction;
}
// R-8.
@mixin animation-fill-mode($fill-mode) {
  -webkit-animation-fill-mode: $fill-mode;
     -moz-animation-fill-mode: $fill-mode;
      -ms-animation-fill-mode: $fill-mode;
       -o-animation-fill-mode: $fill-mode;
          animation-fill-mode: $fill-mode;
}
// R-9. values: running || paused ==//EOF//==
